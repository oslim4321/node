const cloudinary = require("cloudinary").v2;
require("dotenv").config();

// Initialize Cloudinary configuration
cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

module.exports = cloudinary;

const cloudinary = require("./cloudinaryConfig");

// Function to upload image to Cloudinary
const uploadImageToCloudinary = async (filePath) => {
  try {
    const result = await cloudinary.uploader.upload(filePath, {
      folder: "folder_name", // Customize your folder based on project or environment
    });
    return result.secure_url;
  } catch (error) {
    console.error("Failed to upload image to Cloudinary:", error);
    throw error;
  }
};

module.exports = uploadImageToCloudinary;

const express = require("express");
const upload = require("./multer-config");
const uploadImageToCloudinary = require("./uploadHandler");
const app = express();

// Express route for image upload
app.post("/upload", upload.single("image"), async (req, res) => {
  if (!req.file) {
    return res.status(400).json({ error: "No image provided" });
  }

  try {
    const imageUrl = await uploadImageToCloudinary(req.file.path);
    res.json({ imageUrl });
  } catch (error) {
    res.status(500).json({ error: "Error uploading image to Cloudinary" });
  }
});

// Start the server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
